# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
	config.vm.box = "precise64"
	config.vm.box_url = "http://files.vagrantup.com/precise64.box"

	config.vm.network :private_network, ip: "192.168.29.200"

	config.vm.provider "virtualbox" do |v|
  		v.memory = 2048	  
  	end

	# Docker Installation
	config.vm.provision :shell, :inline => "sudo apt-get install -y curl; curl -s https://get.docker.io/ubuntu/ | sudo sh"
	
	# Installation  git, curl, maven wget
	config.vm.provision :shell, :inline => "sudo apt-get install -y maven wget python-software-properties"
	config.vm.provision :shell, :inline => "echo 'export MAVEN_HOME=/usr/share/maven' >> /etc/profile.d/env.sh"

	# Java Installation
	config.vm.provision :shell, :inline => "echo debconf shared/accepted-oracle-license-v1-1 select true | \ sudo debconf-set-selections"
    config.vm.provision :shell, :inline => "echo debconf shared/accepted-oracle-license-v1-1 seen true | \ sudo debconf-set-selections"
  	config.vm.provision :shell, :inline => "sudo add-apt-repository -y ppa:webupd8team/java"
  	config.vm.provision :shell, :inline => "sudo apt-get update"
  	config.vm.provision :shell, :inline => "sudo apt-get install -y oracle-java7-installer"

  	config.vm.provision :shell, :inline => "echo 'export JAVA_HOME=/usr/lib/jvm/java-7-oracle' >> /etc/profile.d/env.sh"

  	#Jenkins Installation
  	config.vm.provision :shell, :inline => "sudo wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add -"
	config.vm.provision :shell, :inline => "sudo sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list'"
	config.vm.provision :shell, :inline => "sudo apt-get update"
	config.vm.provision :shell, :inline => "sudo apt-get install -y jenkins"

  	config.vm.provision :shell, :inline => "echo 'export JENKINS_HOME=/var/lib/jenkins' >> /etc/profile.d/env.sh"

	config.vm.provision :shell, :inline => "sudo mkdir -p /var/lib/jenkins/plugins"
	config.vm.provision :shell, :inline => "sudo chown -R jenkins /var/lib/jenkins"

	config.vm.provision "shell", path: "plugins_jenkins.sh"
	config.vm.provision "shell", path: "add_sudoers.sh"

	config.vm.provision :shell, :inline => "sudo service jenkins restart"	

end
